services:
  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=mmo-kube
      - POSTGRES_PASSWORD=mmo-kube
      - POSTGRES_DB=mmo-kube
    ports:
      - "5432:5432"
    volumes:
      - "mmo-kube:/var/lib/postgresql/data"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 125M
    healthcheck:
      test: pg_isready || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  api:
    build:
      context: api
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - PG_USER=mmo-kube
      - PG_PASSWORD=mmo-kube
      - PG_DATABASE=mmo-kube
      - PG_HOSTNAME=postgres
      - ENV=dev
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 125M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/healthz || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  webapp:
    build:
      context: webapp
    depends_on:
      - api
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      - API_URL=http://api:3000
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 125M
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/healthz || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  mmo-kube:
